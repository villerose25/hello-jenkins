[
  {
    "TempId": 5494,
    "Description": "",
    "Code": "//Selenium namespaces\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.firefox.FirefoxDriver;\nimport org.openqa.selenium.ie.InternetExplorerDriver;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.security.UserAndPassword;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\n\n// Additional libraries might be declared here\n\n   public class CustomActionClass extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>The method does not receive parameters.  However, it may\n       /// use the base's fields 'drv', which is an instance of IWebDriver and screenShotPath, \n       /// which is a string containing the path of the directory where screenshots are being stored.</param>\n       /// <returns>The method returns an ActionResult object which is expected to contain the step\n       /// execution information, such as the status (true or false equivalent to pass or fail), details \n       /// that may explain the fail cause or some extra information and  the path to find the file resulting \n       /// of a screenshot.</returns>\n       ///\n       public ActionResult Execute(WebDriver driver)\n       {\n            String error = \" \";\n           // Build an ActionResult object to return the step's results\n           ActionResult actionResult = new ActionResult();\n\n           // Sample code: \n           try {\n               \n\t\t\t//Comment\n\n           // Set status to true if the step passed, to false otherwise\n                   actionResult.status = true;\n\n           } catch (NoSuchElementException e) {\n           // Set status to true if the step passed, to false otherwise\n           error = e.getLocalizedMessage();\n           actionResult.status = false;\n           }\n\n           // Provide additional information as comments.  These will appear in the report in the comments section.\n           actionResult.comments =  actionResult.status ? \"Element(s) found\" : error;\n\n           // Take a screenshot and tell its file path.  The inherited method 'takeScreenShot'\n           // takes a screenshot and returns a string containing the screenshot file's path:\n           //actionResult.screenShot = actionResult.getScreenShot();\n           // If there is no screenshot, the field should be set as an empty string:\n           actionResult.screenShot = actionResult.getScreenShot();\n\n           // Return results in ActionResult object\n            return actionResult ;\n       }\n   }\n",
    "Name": "custom action cambiado",
    "Created": null,
    "Modified": null
  }
]